-- 기존 테이블이 있다면 삭제
DROP TABLE BOARD CASCADE CONSTRAINTS PURGE;
DROP TABLE BOARD_COMMENT CASCADE CONSTRAINTS PURGE;
DROP TABLE MEMBER CASCADE CONSTRAINTS PURGE;

-- MEMBER 테이블 생성
CREATE TABLE MEMBER (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EMAIL VARCHAR2(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(255) NOT NULL,
    NICKNAME VARCHAR2(50) NOT NULL,
    PHONE VARCHAR2(20) NOT NULL UNIQUE,
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

-- BOARD 테이블 생성
CREATE TABLE BOARD (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TITLE VARCHAR2(200) NOT NULL,
    CONTENT CLOB NOT NULL,
    AUTHOR VARCHAR2(100) NOT NULL,
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    MODIFIED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

-- BOARD_COMMENT 테이블 생성
CREATE TABLE BOARD_COMMENT (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    BOARD_ID NUMBER NOT NULL,
    CONTENT CLOB NOT NULL,
    AUTHOR VARCHAR2(100) NOT NULL,
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    MODIFIED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    CONSTRAINT FK_COMMENT_BOARD FOREIGN KEY (BOARD_ID) REFERENCES BOARD(ID) ON DELETE CASCADE
);

-- 인덱스 생성
CREATE INDEX IDX_MEMBER_EMAIL ON MEMBER(EMAIL);
CREATE INDEX IDX_BOARD_AUTHOR ON BOARD(AUTHOR);
CREATE INDEX IDX_BOARD_CREATED_DATE ON BOARD(CREATED_DATE);
CREATE INDEX IDX_COMMENT_BOARD_ID ON BOARD_COMMENT(BOARD_ID);

-- 데이터베이스 저장 확인
SELECT * FROM BOARD ORDER BY ID DESC;

-- 1. 전체 게시글 목록 조회 (최신순)
SELECT
    ID,
    TITLE,
    CONTENT,
    AUTHOR,
    TO_CHAR(CREATED_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATED_DATE,
    TO_CHAR(MODIFIED_DATE, 'YYYY-MM-DD HH24:MI:SS') AS MODIFIED_DATE
FROM BOARD
ORDER BY ID DESC;

-- 2. 특정 작성자의 게시글 조회
SELECT * FROM BOARD
WHERE AUTHOR = '작성자명'
ORDER BY ID DESC;

-- 3. 제목으로 검색
SELECT * FROM BOARD
WHERE TITLE LIKE '%검색어%'
ORDER BY ID DESC;

-- 4. 오늘 작성된 게시글 조회
SELECT * FROM BOARD
WHERE TRUNC(CREATED_DATE) = TRUNC(SYSDATE)
ORDER BY ID DESC;

-- 5. 게시글 상세 정보 조회 (특정 ID)
SELECT
    ID,
    TITLE,
    CONTENT,
    AUTHOR,
    TO_CHAR(CREATED_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATED_DATE,
    TO_CHAR(MODIFIED_DATE, 'YYYY-MM-DD HH24:MI:SS') AS MODIFIED_DATE
FROM BOARD
WHERE ID = 게시글번호;

-- 6. 제목+내용으로 검색
SELECT * FROM BOARD
WHERE TITLE LIKE '%검색어%'
   OR CONTENT LIKE '%검색어%'
ORDER BY ID DESC;

-- 7. 특정 기간 내 게시글 조회
SELECT * FROM BOARD
WHERE CREATED_DATE BETWEEN
    TO_DATE('2024-01-01', 'YYYY-MM-DD') AND
    TO_DATE('2024-12-31', 'YYYY-MM-DD')
ORDER BY ID DESC;

-- 8. 게시글 통계
-- 전체 게시글 수
SELECT COUNT(*) AS TOTAL_COUNT FROM BOARD;

-- 작성자별 게시글 수
SELECT AUTHOR, COUNT(*) AS POST_COUNT
FROM BOARD
GROUP BY AUTHOR
ORDER BY POST_COUNT DESC;

-- 일자별 게시글 수
SELECT
    TRUNC(CREATED_DATE) AS POST_DATE,
    COUNT(*) AS POST_COUNT
FROM BOARD
GROUP BY TRUNC(CREATED_DATE)
ORDER BY POST_DATE DESC;

-- 테이블 구조 확인
DESC BOARD;

-- 댓글 관련 쿼리
-- 1. 특정 게시글의 댓글 목록 조회
SELECT * FROM BOARD_COMMENT
WHERE BOARD_ID = ?
ORDER BY CREATED_DATE DESC;

-- 2. 댓글 작성
INSERT INTO BOARD_COMMENT (BOARD_ID, CONTENT, AUTHOR)
VALUES (?, ?, ?);

-- 3. 댓글 수정
UPDATE BOARD_COMMENT
SET CONTENT = ?, MODIFIED_DATE = SYSTIMESTAMP
WHERE ID = ?;

-- 4. 댓글 삭제
DELETE FROM BOARD_COMMENT
WHERE ID = ?;

-- 5. 게시글 삭제 시 연관된 댓글도 함께 삭제 (CASCADE)